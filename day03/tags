!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Zig	T,types	/type definitions/
!_TAG_KIND_DESCRIPTION!Zig	e,errors	/error definitions/
!_TAG_KIND_DESCRIPTION!Zig	f,functions	/function definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Zig	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	C:/Users/ssara/source/repos/zig/advent_of_code/day03/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20230611.0/
PossiblePartNumber	src/main.zig	/^const PossiblePartNumber = struct {$/;"	T
Symbol	src/main.zig	/^const Symbol = struct {$/;"	T
init	src/main.zig	/^    pub fn init(symbol: u8, x: u16, y: u16) Symbol {$/;"	f
init	src/main.zig	/^    pub fn init(value: []const u8, x: u16, y: u16) PossiblePartNumber {$/;"	f
is_adjacent_to_symbol	src/main.zig	/^    pub fn is_adjacent_to_symbol(self: PossiblePartNumber, symbol: *const Symbol) bool {$/;"	f
is_digit	src/main.zig	/^fn is_digit(char: u8) bool {$/;"	f
is_symbol	src/main.zig	/^fn is_symbol(char: u8) bool {$/;"	f
main	src/main.zig	/^pub fn main() !u8 {$/;"	f
print_syntax	src/main.zig	/^fn print_syntax(stdout: fs.File.Writer) !void {$/;"	f
